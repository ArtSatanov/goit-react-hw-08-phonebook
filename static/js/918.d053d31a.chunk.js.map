{"version":3,"file":"static/js/918.d053d31a.chunk.js","mappings":"yQAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6JAUzBC,EAAcJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yGAQ1BG,EAAaN,EAAAA,GAAAA,OAAaO,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qWAmB1BK,GAASR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAoBU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,qFAO7BQ,EAAYX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,uUAetBU,EAAUb,EAAAA,GAAAA,EAAQc,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,8B,SChDzBY,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,cACPC,IAAI,GAAI,aACRH,SAAS,YACZI,KAAMP,EAAAA,KACHK,IAAI,EAAG,cACPC,IAAI,GAAI,aACRH,SAAS,cAGDK,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,MAAChB,EAAS,CAAAiB,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbR,KAAM,GACNH,SAAU,GACVF,MAAO,IAETc,iBAAkBjB,EAClBkB,SAde,SAACC,EAAQC,GAC5BV,GAASW,EAAAA,EAAAA,IAAaF,IACtBC,EAAOE,WACT,EAW6BT,UAEvBD,EAAAA,EAAAA,MAAC5B,EAAU,CAAA6B,SAAA,EACTC,EAAAA,EAAAA,KAACzB,EAAW,CAACkC,QAAQ,OAAMV,SAAC,UAC5BC,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAACC,GAAG,OAAOjB,KAAK,OAAOkB,YAAY,UACzCZ,EAAAA,EAAAA,KAACrB,EAAM,CAACe,KAAK,UAEbM,EAAAA,EAAAA,KAACzB,EAAW,CAACkC,QAAQ,QAAOV,SAAC,WAC7BC,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAACC,GAAG,QAAQjB,KAAK,QAAQkB,YAAY,QAAQC,KAAK,WACxDb,EAAAA,EAAAA,KAACrB,EAAM,CAACe,KAAK,WAEbM,EAAAA,EAAAA,KAACzB,EAAW,CAACkC,QAAQ,WAAUV,SAAC,cAChCC,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAACC,GAAG,WAAWjB,KAAK,WAAWkB,YAAY,cACjDZ,EAAAA,EAAAA,KAACrB,EAAM,CAACe,KAAK,cAEbM,EAAAA,EAAAA,KAACvB,EAAU,CAACoC,KAAK,SAAQd,SAAC,aAC1BD,EAAAA,EAAAA,MAACd,EAAO,CAAAe,SAAA,CAAC,sBACWC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,GAAI,SAAShB,SAAC,qBAMlD,ECxDA,EARqB,WACnB,OACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACL,EAAU,KAGjB,C","sources":["components/SignUpForm/SignUpForm.styled.js","components/SignUpForm/SignUpForm.jsx","pages/RegisterPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  margin: 30px 0;\n  width: 350px;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nexport const FormButton = styled.button`\n  display: inline-block;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  margin: 0 auto;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  border-radius: 30px;\n  font-weight: 700;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  font-size: 13px;\n  font-weight: 600;\n  color: red;\n  display: block;\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 300px;\n  border: 1px solid rgba(46, 47, 66, 0.1);\n  border-radius: 2%;\n  overflow: hidden;\n  background-color: white;\n  margin: 10px auto 50px;\n  padding-top: 20px;\n  box-shadow: 0 0 10px #c6cccced;\n`;\n\nexport const StyledP = styled.p`\n  font-size: 13px;\n`;\n","import { Formik, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/operations';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  StyledLabel,\n  FormButton,\n  ErrMsg,\n  StyledDiv,\n  StyledP,\n} from './SignUpForm.styled';\n\nconst SignUpSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string()\n    .min(5, 'Too Short!')\n    .max(15, 'Too Long!')\n    .required('Required'),\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(20, 'Too Long!')\n    .required('Required'),\n});\n\nexport const SignUpFrom = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, action) => {\n    dispatch(registerUser(values));\n    action.resetForm();\n  };\n  return (\n    <StyledDiv>\n      <h1>Sign Up</h1>\n      <Formik\n        initialValues={{\n          name: '',\n          password: '',\n          email: '',\n        }}\n        validationSchema={SignUpSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledLabel htmlFor=\"name\">Name</StyledLabel>\n          <Field id=\"name\" name=\"name\" placeholder=\"Jane\" />\n          <ErrMsg name=\"name\" />\n\n          <StyledLabel htmlFor=\"email\">Email</StyledLabel>\n          <Field id=\"email\" name=\"email\" placeholder=\"email\" type=\"email\" />\n          <ErrMsg name=\"email\" />\n\n          <StyledLabel htmlFor=\"password\">Password</StyledLabel>\n          <Field id=\"password\" name=\"password\" placeholder=\"password\" />\n          <ErrMsg name=\"password\" />\n\n          <FormButton type=\"submit\">Sign Up</FormButton>\n          <StyledP>\n            Have an account ? <Link to={'/login'}>Log In</Link>\n          </StyledP>\n        </StyledForm>\n      </Formik>\n    </StyledDiv>\n  );\n};\n","import { SignUpFrom } from 'components/SignUpForm/SignUpForm';\n\nconst RegisterPage = () => {\n  return (\n    <div>\n      <SignUpFrom />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledLabel","_templateObject2","FormButton","_templateObject3","ErrMsg","ErrorMessage","_templateObject4","StyledDiv","_templateObject5","StyledP","_templateObject6","SignUpSchema","Yup","shape","email","required","password","min","max","name","SignUpFrom","dispatch","useDispatch","_jsxs","children","_jsx","Formik","initialValues","validationSchema","onSubmit","values","action","registerUser","resetForm","htmlFor","Field","id","placeholder","type","Link","to"],"sourceRoot":""}