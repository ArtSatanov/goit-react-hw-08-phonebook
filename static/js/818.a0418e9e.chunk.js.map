{"version":3,"file":"static/js/818.a0418e9e.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/Error/Error.jsx","components/ContactList/ContactList.js","components/FilterBar/FilterBar.styled.js","components/FilterBar/FilterBar.js","pages/PhoneBookPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: start;\n  gap: 10px;\n  margin: 30px 0;\n  width: 350px;\n`;\n\nexport const StyledLabelName = styled.span`\n  display: block;\n  min-width: 70px;\n  font-size: 15px;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nexport const StyledField = styled(Field)``;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  margin-right: auto;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  font-size: 13px;\n  font-weight: 600;\n  color: red;\n  display: block;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  StyledLabelName,\n  StyledField,\n  StyledLabel,\n  ErrMsg,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .min(9, 'Too Short!')\n    .max(9, 'Too Long!')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, action) => {\n    if (\n      contacts.find(\n        option => option.name.toLowerCase() === values.name.toLowerCase()\n      )\n    ) {\n      alert(`${values.name} is already in contacts`);\n    } else {\n      console.log(values);\n      dispatch(addContact(values));\n      action.resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm>\n        <StyledLabel>\n          <StyledLabelName>Name</StyledLabelName>\n          <StyledField id=\"name\" name=\"name\" placeholder=\"Jane Derossa\" />\n          <ErrMsg component=\"div\" name=\"name\" />\n        </StyledLabel>\n        <StyledLabel>\n          <StyledLabelName>Number</StyledLabelName>\n          <StyledField id=\"number\" name=\"number\" placeholder=\"***-**-**\" />\n          <ErrMsg component=\"div\" name=\"number\" />\n        </StyledLabel>\n        <button type=\"submit\">Add contact</button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTb = styled.table``;\n\nexport const StyledTh = styled.th`\n  width: 300px;\n  padding: 10px 0 10px;\n  font-size: 15px;\n  font-weight: 600;\n  text-transform: uppercase;\n  box-shadow: 0 0 10px #c6cccced;\n`;\n\nexport const StyledTd = styled.td`\n  width: 300px;\n  padding: 5px 0 5px;\n  font-size: 15px;\n  font-weight: 600;\n  text-transform: uppercase;\n  box-shadow: 0 0 10px #c6cccced;\n  text-align: center;\n`;\n","export const Error = ({ msg }) => {\n  return (\n    <div>\n      <p>{msg}</p>\n    </div>\n  );\n};\n","import { StyledTh, StyledTb, StyledTd } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/operations';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport {\n  selectError,\n  selectLoading,\n  selectVisibleContacts,\n} from 'redux/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { Error } from 'components/Error/Error';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    dispatch(fetchContacts(controller.signal));\n    return () => {\n      controller.abort();\n    };\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n\n      {!isLoading && !error && contacts.length !== 0 && (\n        <StyledTb>\n          <thead>\n            <tr>\n              <StyledTh>Name</StyledTh>\n              <StyledTh>Number</StyledTh>\n              <StyledTh>Action</StyledTh>\n            </tr>\n          </thead>\n\n          <tbody>\n            {contacts.map(contact => (\n              <tr key={contact.id}>\n                <StyledTd>{contact.name}</StyledTd>\n                <StyledTd>{contact.number}</StyledTd>\n                <StyledTd>\n                  <button onClick={() => dispatch(deleteContact(contact.id))}>\n                    Delete\n                  </button>\n                </StyledTd>\n              </tr>\n            ))}\n          </tbody>\n        </StyledTb>\n      )}\n      {error && (\n        <Error msg={'Something went wrong! Please reaload the page! '} />\n      )}\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSearch = styled.div`\n  margin: 20px 0;\n`;\n","import { StyledSearch } from './FilterBar.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nexport const FilterBar = () => {\n  const dispatch = useDispatch();\n  const { filter } = useSelector(state => state.filter);\n\n  return (\n    <StyledSearch>\n      <input\n        placeholder=\"Filter\"\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      ></input>\n    </StyledSearch>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { FilterBar } from '../components/FilterBar/FilterBar';\n\nconst PhoneBookPage = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <FilterBar />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default PhoneBookPage;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledLabelName","_templateObject2","StyledField","Field","_templateObject3","StyledLabel","_templateObject4","ErrMsg","ErrorMessage","_templateObject5","SignupSchema","Yup","shape","name","min","max","required","number","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","_jsx","Formik","initialValues","validationSchema","onSubmit","values","action","find","option","toLowerCase","alert","concat","console","log","addContact","resetForm","children","_jsxs","id","placeholder","component","type","StyledTb","StyledTh","StyledTd","Error","_ref","msg","ContactList","selectVisibleContacts","isLoading","selectLoading","error","selectError","useEffect","controller","AbortController","fetchContacts","signal","abort","Loader","length","map","contact","onClick","deleteContact","StyledSearch","FilterBar","filter","state","value","onChange","e","setFilter","target"],"sourceRoot":""}