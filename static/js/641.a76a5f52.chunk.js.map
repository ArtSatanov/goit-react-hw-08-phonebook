{"version":3,"file":"static/js/641.a76a5f52.chunk.js","mappings":"wQAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6JAUzBC,EAAcJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yGAQ1BG,EAAaN,EAAAA,GAAAA,OAAaO,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qWAmB1BK,GAASR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAoBU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,qFAO7BQ,EAAYX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,uUAetBU,EAAUb,EAAAA,GAAAA,EAAQc,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,8B,SChDzBY,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,EAAAA,KAAaK,IAAI,GAAI,aAAaF,SAAS,cAG1CG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,MAACd,EAAS,CAAAe,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbX,MAAO,GACPE,SAAU,IAEZU,iBAAkBf,EAClBgB,SAfe,SAACC,EAAQC,GAC5BC,QAAQC,IAAIH,GACZT,GAASa,EAAAA,EAAAA,IAAUJ,IACnBC,EAAOI,WACT,EAW6BX,UAEvBD,EAAAA,EAAAA,MAAC1B,EAAU,CAAA2B,SAAA,EACTC,EAAAA,EAAAA,KAACvB,EAAW,CAACkC,QAAQ,QAAOZ,SAAC,WAC7BC,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACC,GAAG,QAAQC,KAAK,QAAQC,YAAY,QAAQC,KAAK,WACxDhB,EAAAA,EAAAA,KAACnB,EAAM,CAACiC,KAAK,WAEbd,EAAAA,EAAAA,KAACvB,EAAW,CAACkC,QAAQ,WAAUZ,SAAC,cAChCC,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACC,GAAG,WAAWC,KAAK,WAAWC,YAAY,cACjDf,EAAAA,EAAAA,KAACnB,EAAM,CAACiC,KAAK,cAEbd,EAAAA,EAAAA,KAACrB,EAAU,CAACqC,KAAK,SAAQjB,SAAC,YAC1BD,EAAAA,EAAAA,MAACZ,EAAO,CAAAa,SAAA,CAAC,uBACYC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAI,YAAYnB,SAAC,sBAMtD,EC9CA,EARkB,WAChB,OACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACL,EAAS,KAGhB,C","sources":["components/LogInForm/LoginForm.styled.js","components/LogInForm/LoginForm.jsx","pages/LoginPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  margin: 30px 0;\n  width: 350px;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nexport const FormButton = styled.button`\n  display: inline-block;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  margin: 0 auto;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  border-radius: 30px;\n  font-weight: 700;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  font-size: 13px;\n  font-weight: 600;\n  color: red;\n  display: block;\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 300px;\n  border: 1px solid rgba(46, 47, 66, 0.1);\n  border-radius: 2%;\n  overflow: hidden;\n  background-color: white;\n  margin: 10px auto 50px;\n  padding-top: 20px;\n  box-shadow: 0 0 10px #c6cccced;\n`;\n\nexport const StyledP = styled.p`\n  font-size: 13px;\n`;\n","import { Formik, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logInUser } from 'redux/operations';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  StyledLabel,\n  FormButton,\n  ErrMsg,\n  StyledDiv,\n  StyledP,\n} from './LoginForm.styled';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().max(15, 'Too Long!').required('Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, action) => {\n    console.log(values);\n    dispatch(logInUser(values));\n    action.resetForm();\n  };\n\n  return (\n    <StyledDiv>\n      <h1>LOGIN</h1>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={LoginSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledLabel htmlFor=\"email\">Email</StyledLabel>\n          <Field id=\"email\" name=\"email\" placeholder=\"email\" type=\"email\" />\n          <ErrMsg name=\"email\" />\n\n          <StyledLabel htmlFor=\"password\">Password</StyledLabel>\n          <Field id=\"password\" name=\"password\" placeholder=\"password\" />\n          <ErrMsg name=\"password\" />\n\n          <FormButton type=\"submit\">Log in</FormButton>\n          <StyledP>\n            Create an account? <Link to={'/register'}>Sign Up</Link>\n          </StyledP>\n        </StyledForm>\n      </Formik>\n    </StyledDiv>\n  );\n};\n","import { LoginForm } from 'components/LogInForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledLabel","_templateObject2","FormButton","_templateObject3","ErrMsg","ErrorMessage","_templateObject4","StyledDiv","_templateObject5","StyledP","_templateObject6","LoginSchema","Yup","shape","email","required","password","max","LoginForm","dispatch","useDispatch","_jsxs","children","_jsx","Formik","initialValues","validationSchema","onSubmit","values","action","console","log","logInUser","resetForm","htmlFor","Field","id","name","placeholder","type","Link","to"],"sourceRoot":""}